{"version":3,"file":"free-style.js","sourceRoot":"","sources":["../src/free-style.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = number | boolean | string\n\n/**\n * Input styles object.\n */\nexport interface Styles {\n  [selector: string]: null | undefined | PropertyValue | PropertyValue[] | Styles\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string\n\n/**\n * Tag styles with this string to get unique hashes.\n */\nexport const IS_UNIQUE = '__DO_NOT_DEDUPE_STYLE__'\n\nconst upperCasePattern = /[A-Z]/g\nconst msPattern = /^ms-/\nconst interpolatePattern = /&/g\nconst escapePattern = /[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g\nconst propLower = (m: string) => `-${m.toLowerCase()}`\n\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER: Record<string, true> = {\n  'animation-iteration-count': true,\n  'border-image-outset': true,\n  'border-image-slice': true,\n  'border-image-width': true,\n  'box-flex': true,\n  'box-flex-group': true,\n  'box-ordinal-group': true,\n  'column-count': true,\n  'columns': true,\n  'counter-increment': true,\n  'counter-reset': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'flex-order': true,\n  'font-weight': true,\n  'grid-area': true,\n  'grid-column': true,\n  'grid-column-end': true,\n  'grid-column-span': true,\n  'grid-column-start': true,\n  'grid-row': true,\n  'grid-row-end': true,\n  'grid-row-span': true,\n  'grid-row-start': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  // SVG properties.\n  'fill-opacity': true,\n  'flood-opacity': true,\n  'stop-opacity': true,\n  'stroke-dasharray': true,\n  'stroke-dashoffset': true,\n  'stroke-miterlimit': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}\n\n// Add vendor prefixes to all unit-less properties.\nfor (const property of Object.keys(CSS_NUMBER)) {\n  for (const prefix of ['-webkit-', '-ms-', '-moz-', '-o-', '']) {\n    CSS_NUMBER[prefix + property] = true\n  }\n}\n\n/**\n * Escape a CSS class name.\n */\nexport const escape = (str: string) => str.replace(escapePattern, '\\\\$&')\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nexport function hyphenate (propertyName: string): string {\n  return propertyName\n    .replace(upperCasePattern, propLower)\n    .replace(msPattern, '-ms-') // Internet Explorer vendor prefix.\n}\n\n/**\n * Generate a hash value from a string.\n */\nexport function stringHash (str: string): string {\n  let value = 5381\n  let len = str.length\n  while (len--) value = (value * 33) ^ str.charCodeAt(len)\n  return (value >>> 0).toString(36)\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString (key: string, value: PropertyValue) {\n  if (typeof value === 'number' && value !== 0 && !CSS_NUMBER.hasOwnProperty(key)) {\n    return `${key}:${value}px`\n  }\n\n  return `${key}:${value}`\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples <T extends any[]> (value: T[]): T[] {\n  return value.sort((a, b) => a[0] > b[0] ? 1 : -1)\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles (styles: Styles, hasNestedStyles: boolean) {\n  const properties: Array<[string, PropertyValue | PropertyValue[]]> = []\n  const nestedStyles: Array<[string, Styles]> = []\n  let isUnique = false\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const value = styles[key]\n\n    if (value !== null && value !== undefined) {\n      if (key === IS_UNIQUE) {\n        isUnique = true\n      } else if (typeof value === 'object' && !Array.isArray(value)) {\n        nestedStyles.push([key.trim(), value])\n      } else {\n        properties.push([hyphenate(key.trim()), value])\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique\n  }\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties (properties: Array<[string, PropertyValue | PropertyValue[]]>) {\n  return properties.map(([name, value]) => {\n    if (!Array.isArray(value)) return styleToString(name, value)\n\n    return value.map(x => styleToString(name, x)).join(';')\n  }).join(';')\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate (selector: string, parent: string) {\n  if (selector.indexOf('&') === -1) return `${parent} ${selector}`\n  return selector.replace(interpolatePattern, parent)\n}\n\ntype StylizeStyle = { selector: string, style: string, isUnique: boolean }\ntype StylizeRule = { selector: string, style: string, rules: StylizeRule[], styles: StylizeStyle[] }\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize (\n  selector: string,\n  styles: Styles,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  parent?: string\n) {\n  const { style, nested, isUnique } = parseStyles(styles, selector !== '')\n  let pid = style\n\n  if (selector.charCodeAt(0) === 64 /* @ */) {\n    const child: StylizeRule = { selector, styles: [], rules: [], style: parent ? '' : style }\n    rulesList.push(child)\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (style && parent) child.styles.push({ selector: parent, style, isUnique })\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent)\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector\n\n    if (style) stylesList.push({ selector: key, style, isUnique })\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key)\n    }\n  }\n\n  return pid\n}\n\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize (\n  cache: Cache<Rule | Style>,\n  pid: string,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  className: string,\n  isStyle: boolean\n) {\n  for (const { selector, style, isUnique } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector\n    const id = isUnique ? `u\\0${(++uniqueId).toString(36)}` : `s\\0${pid}\\0${style}`\n    const item = new Style(style, id)\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`))\n    cache.add(item)\n  }\n\n  for (const { selector, style, rules, styles } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`)\n    composeStylize(item, pid, rules, styles, className, isStyle)\n    cache.add(item)\n  }\n}\n\n/**\n * Cache to list to styles.\n */\nfunction join (arr: string[]): string {\n  let res = ''\n  for (let i = 0; i < arr.length; i++) res += arr[i]\n  return res\n}\n\n/**\n * Propagate change events.\n */\nexport interface Changes {\n  add (style: Container<any>, index: number): void\n  change (style: Container<any>, oldIndex: number, newIndex: number): void\n  remove (style: Container<any>, index: number): void\n}\n\n/**\n * Noop changes.\n */\nconst noopChanges: Changes = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n}\n\n/**\n * Cacheable interface.\n */\nexport interface Container <T> {\n  id: string\n  clone (): T\n  getStyles (): string\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache <T extends Container<any>> {\n  sheet: string[] = []\n  changeId = 0\n\n  private _keys: string[] = []\n  private _children: Record<string, T | undefined> = Object.create(null)\n  private _counters: Record<string, number | undefined> = Object.create(null)\n\n  constructor (public changes: Changes = noopChanges) {}\n\n  add <U extends T> (style: U): U {\n    const count = this._counters[style.id] || 0\n    const item: U = this._children[style.id] || style.clone()\n\n    this._counters[style.id] = count + 1\n\n    if (count === 0) {\n      this._children[item.id] = item\n      this._keys.push(item.id)\n      this.sheet.push(item.getStyles())\n      this.changeId++\n      this.changes.add(item, this._keys.length - 1)\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id)\n      const prevItemChangeId = item.changeId\n\n      item.merge(style)\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles())\n        this.changeId++\n        this.changes.change(item, curIndex, curIndex)\n      }\n    }\n\n    return item\n  }\n\n  remove (style: T): void {\n    const count = this._counters[style.id]\n\n    if (count !== undefined && count > 0) {\n      this._counters[style.id] = count - 1\n\n      const item = this._children[style.id]!\n      const index = this._keys.indexOf(item.id)\n\n      if (count === 1) {\n        delete this._counters[style.id]\n        delete this._children[style.id]\n\n        this._keys.splice(index, 1)\n        this.sheet.splice(index, 1)\n        this.changeId++\n        this.changes.remove(item, index)\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId\n\n        item.unmerge(style)\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles())\n          this.changeId++\n          this.changes.change(item, index, index)\n        }\n      }\n    }\n  }\n\n  values (): T[] {\n    return this._keys.map(key => this._children[key]!)\n  }\n\n  merge (cache: Cache<any>) {\n    for (const item of cache.values()) this.add(item)\n    return this\n  }\n\n  unmerge (cache: Cache<any>) {\n    for (const item of cache.values()) this.remove(item)\n    return this\n  }\n\n  clone (): Cache<T> {\n    return new Cache<T>().merge(this)\n  }\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n  constructor (public selector: string, public id: string) {}\n\n  getStyles () {\n    return this.selector\n  }\n\n  clone (): Selector {\n    return new Selector(this.selector, this.id)\n  }\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n  constructor (public style: string, public id: string) {\n    super()\n  }\n\n  getStyles (): string {\n    return `${this.sheet.join(',')}{${this.style}}`\n  }\n\n  clone (): Style {\n    return new Style(this.style, this.id).merge(this)\n  }\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n  constructor (\n    public rule: string,\n    public style: string,\n    public id: string\n  ) {\n    super()\n  }\n\n  getStyles (): string {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`\n  }\n\n  clone (): Rule {\n    return new Rule(this.rule, this.style, this.id).merge(this)\n  }\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style> implements Container<FreeStyle> {\n  constructor (\n    public hash: HashFunction,\n    public debug: boolean,\n    public id: string,\n    changes?: Changes\n  ) {\n    super(changes)\n  }\n\n  registerStyle (styles: Styles, displayName?: string) {\n    const rulesList: StylizeRule[] = []\n    const stylesList: StylizeStyle[] = []\n    const pid = stylize('&', styles, rulesList, stylesList)\n    const hash = `f${this.hash(pid)}`\n    const id = this.debug && displayName ? `${displayName}_${hash}` : hash\n    composeStylize(this, pid, rulesList, stylesList, `.${escape(id)}`, true)\n    return id\n  }\n\n  registerKeyframes (keyframes: Styles, displayName?: string) {\n    return this.registerHashRule('@keyframes', keyframes, displayName)\n  }\n\n  registerHashRule (prefix: string, styles: Styles, displayName?: string) {\n    const rulesList: StylizeRule[] = []\n    const stylesList: StylizeStyle[] = []\n    const pid = stylize('', styles, rulesList, stylesList)\n    const hash = `f${this.hash(pid)}`\n    const id = this.debug && displayName ? `${displayName}_${hash}` : hash\n    const rule = new Rule(`${prefix} ${escape(id)}`, '', `h\\0${pid}\\0${prefix}`)\n    composeStylize(rule, pid, rulesList, stylesList, '', false)\n    this.add(rule)\n    return id\n  }\n\n  registerRule (rule: string, styles: Styles) {\n    const rulesList: StylizeRule[] = []\n    const stylesList: StylizeStyle[] = []\n    const pid = stylize(rule, styles, rulesList, stylesList)\n    composeStylize(this, pid, rulesList, stylesList, '', false)\n  }\n\n  registerCss (styles: Styles) {\n    return this.registerRule('', styles)\n  }\n\n  getStyles (): string {\n    return join(this.sheet)\n  }\n\n  clone (): FreeStyle {\n    return new FreeStyle(this.hash, this.debug, this.id, this.changes).merge(this)\n  }\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create (\n  hash: HashFunction = stringHash,\n  debug: boolean = typeof (process as any) !== 'undefined' && (process.env as any).NODE_ENV !== 'production',\n  changes: Changes = noopChanges\n) {\n  return new FreeStyle(hash, debug, `f${(++uniqueId).toString(36)}`, changes)\n}\n"]}